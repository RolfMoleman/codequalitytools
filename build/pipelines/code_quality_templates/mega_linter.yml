steps:
  - script: |

      docker pull oxsecurity/megalinter:latest
      docker run \
      --env MEGALINTER_CONFIG='/repo_template/config/.mega-linter.yml' \
      --volume $(pwd):/tmp/lint oxsecurity/megalinter:latest
    condition: succeededOrFailed()
    displayName: "Code Scan using Mega-Linter"
    enabled: true
    name: "Code_Scan_using_MegaLinter"
    workingDirectory: "$(System.DefaultWorkingDirectory)"

  # Create work items to review failures
  - task: CreateWorkItem@1
    condition: failed()
    displayName: "Create work item"
    enabled: true
    inputs:
      #teamProject: # Optional
      workItemType: "Product Backlog Item"
      title: "Review Megalinter failures for $(project_repo) repository"
      #assignedTo: # Optional
      #areaPath: # Optional
      #iterationPath: # Optional
      fieldMappings: "Description=Please review the attached files and linked build" # Optional; Required if your process defines additional required work item fields
      associate: true # Optional
      associationType: "foundinbuild" # Optional; Valid values: build, integratedInBuild, foundInBuild
      # ===== Linking Inputs =====
      #linkWorkItems: false # Optional
      #linkType: # Required if linkWorkItems = true
      #linkTarget: id # Optional; Valid values: id, wiql
      #targetId: # Required if linkWorkItems = true and linkTarget = id
      #targetWiql: # Required if linkWorkItems = true and linkTarget = wiql
      limitWorkItemLinksToSameProject: true # Optional
      linkPR: true # Optional
      #linkCode: true # Optional
      #commitsAndChangesets: # Required if linkCode = true
      # ===== Attachments Inputs =====
      addAttachments: true # Optional
      attachmentsFolder: "$(System.DefaultWorkingDirectory)/Report/" # Optional
      attachments: "*.*" # Required if addAttachments = true
      # ===== Duplicate Inputs =====
      #preventDuplicates: false # Optional
      #keyFields: # Required if preventDuplicates = true
      #updateDuplicates: false # Optional
      #updateRules: # Optional
      # ===== Outputs Inputs =====
      #createOutputs: false # Optional
      #outputVariables: # Required if createOutputs = true
      # ===== Advanced Inputs =====
      #authToken: #Optional
      #allowRedirectDowngrade: false # Optional

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter Report"
    enabled: true
    name: "Publish_MegaLinter_Report"
    inputs:
      PathtoPublish: "$(System.DefaultWorkingDirectory)/megalinter-reports/"
      ArtifactName: MegaLinterReport-$(environment_tag)

  #copy sarif files to sarif directory to avoid polluting CodeAnalysisLogs
  - task: Powershell@2
    condition: succeededOrFailed()
    displayName: "Copy Sarif Files"
    enabled: true
    inputs:
      targetType: 'inline'
      script: |
        $files = dir -R --all
        ForEach($file in $files)
        {
          if($file.extension.Contains("sarif"))
          {
              Copy-Item -Path $file.FullName -Destination $(System.DefaultWorkingDirectory)/megalinter-reports/sarif -Force
          }
          else
          {
              Write-output $file.FullName "does not need moving"
          }      
        }
        Copy-Item -Path $(System.DefaultWorkingDirectory)/megalinter-reports/megalinter-report.sarif -Destination $(System.DefaultWorkingDirectory)/megalinter-reports/sarif -Force
      showWarnings: true
      pwsh: true
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  #publish Megalinter Scan
  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: "Publish Megalinter Scan"
    enabled: true
    name: "Publish_megalinter_scan"
    inputs:
      PathtoPublish: "$(System.DefaultWorkingDirectory)/megalinter-reports/sarif"
      ArtifactName: "CodeAnalysisLogs"
      publishLocation: "container"

  - script: |
      npm install -g tap-junit
      mkdir megalinter-reports_converted/
      cd ./megalinter-reports/tap
      for report in *; do
      ReportName=$(echo $report | sed -n "s/mega-linter-\s*\(\S*\).tap$/\1/p")
      # workaround for https://github.com/dhershman1/tap-junit/issues/30#issuecomment-744462006
        'sed -i "s/message: \*\+/message: /g" $report'
      # Some message got comments with # which are ignored by tap-junit, so we escape it
        'sed -i -E "s/(^|[ ]+)(#)[a-zA-Z]*/\1\/\//g" $report'
      ## Converting TAP files into xml files with JUnit5 format
      #  cat $report | tap-junit -p -s "mega-linter" > ../../megalinter-reports_converted/${report}.xml
      #Carls method
        cat $report | tap-junit --pretty --suite $ReportName --input ${report} > $(System.DefaultWorkingDirectory)/megalinter-reports_converted/${ReportName}.xml
      # Remove escaping on newlines for readability
        sed -i 's/\\n/\n/g' $(System.DefaultWorkingDirectory)/megalinter-reports_converted/${report}.xml
      # Replace ANSI colors as they are illegal characters
        sed -i 's/\x1b\[[0-9;]*m//g' $(System.DefaultWorkingDirectory)/megalinter-reports_converted/${report}.xml
      done
    condition: succeededOrFailed()
    displayName: "Convert tap reports to junit"
    enabled: true
    name: "Convert_tap_reports_to_junit"
    workingDirectory: "$(System.DefaultWorkingDirectory)"

  - script: |
      cd ./megalinter-reports_converted
      ls -la
      echo "Appending environment to file name"
      ls -a 
      for f in *;do mv -v "$f" "${f%.*}-$(environment_tag).${f##*.}";done
      ls -la
    condition: succeededOrFailed()
    displayName: "rename reports"
    enabled: true
    name: "rename_reports"
    workingDirectory: "$(System.DefaultWorkingDirectory)"

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: "Publish renamed MegaLinter Reports"
    enabled: true
    name: "Publish_renamed_MegaLinter_Reports"
    inputs:
      PathtoPublish: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      ArtifactName: "MegaLinter JUnit-Reports-$(environment_tag)"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - ARM_TTK Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "ARM_ARM_TTK-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - ARM"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - JSON_ESLINT Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "JSON_ESLINT_PLUGIN_JSONC-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - JSON_ESLINT"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - JSON_JSONLINT Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "JSON_JSONLINT-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - JSON_JSONLINT"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - JSON_PRETTIER Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "JSON_PRETTIER-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - JSON_PRETTIER"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - JSON_V8R Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "JSON_V8R-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - JSON_V8R"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - MARKDOWN_LINK_CHECK Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "MARKDOWN_MARKDOWN_LINK_CHECK-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - MARKDOWN_LINK_CHECK"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - MARKDOWN_TABLE_FORMATTER Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "MARKDOWN_MARKDOWN_TABLE_FORMATTER-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - MARKDOWN_TABLE_FORMATTER"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - MARKDOWNLINT Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "MARKDOWN_MARKDOWNLINT-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - MARKDOWNLINT"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - CSPELL Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "SPELL_CSPELL-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - CSPELL"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - MISSPELL Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "SPELL_MISSPELL-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - MISSPELL"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - CHECKOV Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "terraform_CHECKOV-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - CHECKOV"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - KICS Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "terraform_KICS-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - KICS"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - terraform_FMT Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "terraform_terraform_FMT-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - terraform_FMT"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - TFLINT Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "terraform_TFLINT-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - TFLINT"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - YAML_PRETTIER Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "YAML_PRETTIER-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - YAML_PRETTIER"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - YAML_V8R Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "YAML_V8R-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - YAML_V8R"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: "Publish MegaLinter - YAMLLINT Results"
    enabled: true
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "YAML_YAMLLINT-$(environment_tag).xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/megalinter-reports_converted/"
      testRunTitle: "MegaLinter - YAMLLINT"
      mergeTestResults: false
      failTaskOnFailedTests: false
      publishRunAttachments: true

  # Clean up any of the containers / images that were used for quality checks
  - bash: |
      docker rmi "oxsecurity/megalinter:latest" -f | true
    condition: succeededOrFailed()
    displayName: "Remove terraform Quality Check Docker Images"
    enabled: true
    name: "Remove_terraform_Quality_Check_Docker_Images"
    workingDirectory: "$(System.DefaultWorkingDirectory)"

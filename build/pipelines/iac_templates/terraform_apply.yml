steps:
  - task: qetza.replacetokens.replacetokens-task.replacetokens@5
    condition: succeededOrFailed()
    displayName: "Replace variablised versions in terraform"
    enabled: true
    name: "Terraform_Version_replacement"
    inputs:
      rootDirectory: '$(System.DefaultWorkingDirectory)/repo_template/build/terraform'
      targetFiles: '**/*.tf'
      encoding: 'auto'
      tokenPattern: 'rm'
      writeBOM: true
      escapeType: 'none'
      actionOnMissing: 'fail'
      keepToken: true
      actionOnNoFiles: 'warn'
      enableTransforms: false
      enableRecursion: false
      useLegacyPattern: false
      enableTelemetry: true

  - task: terraformInstaller@0
    condition: succeededOrFailed()
    displayName: 'Install terraform version $(terraform_installer_version)'
    enabled: true
    inputs:
      terraformVersion: '$(terraform_installer_version)'
      
  - script: |
      terraform init \
        -backend-config="resource_group_name=$(resource-group)" \
        -backend-config="storage_account_name=$(storage-account)" \
        -backend-config="container_name=$(container-name)" \
        -backend-config="key=$(state-key)" \
        -backend-config="access_key=$(access-key)"
    condition: succeeded()
    displayName: 'terraform init'
    enabled: true
    workingDirectory: "repo_template/build/terraform"

  - script: |
      terraform apply -input=false plan-$(environment_tag)
    condition: succeeded()
    displayName: 'terraform apply'
    enabled: true
    workingDirectory: "repo_template/build/terraform"
